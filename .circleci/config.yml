# (base: https://gist.github.com/zargony/de209b1a790c3cb2176c86405a51b33c)

version: 2

jobs:
  build_and_operational_test:
    docker:
      - image: circleci/rust:1
    steps:
      - checkout
      - run:
          name: Version information
          command: |
            rustc --version
            cargo --version
            rustup --version
      - run:
          name: Build all targets
          command: cargo build --all --all-targets
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Operational test
          command: |
            set -x
            # Create certificates
            mkdir ssl_certs && cd ssl_certs && openssl req -x509 -newkey rsa:4096 -keyout server.key -out server.crt -days 365 -sha256 -nodes --subj '/CN=localhost/' && cd -
            # Run a server
            cargo run -- --http-port=8181 --enable-https --https-port=8443 --crt-path=./ssl_certs/server.crt --key-path=./ssl_certs/server.key &
            sleep 3

            # Transfer data over HTTP
            echo "hello, world" | curl -T - localhost:8181/mypath &
            diff <(echo "hello, world") <(curl localhost:8181/mypath)
            # Make a large random file
            dd if=/dev/urandom iflag=count_bytes count=500M bs=1M of=500M.dat
            # Transfer large data over HTTP
            cat 500M.dat | curl -T - localhost:8181/mypath &
            diff <(cat 500M.dat) <(curl localhost:8181/mypath)
            rm 500M.dat

            # Transfer data over HTTPS
            echo "hello, world with HTTPS" | curl -kT - https://localhost:8443/mypath2 &
            diff <(echo "hello, world with HTTPS") <(curl -k https://localhost:8443/mypath2)
            # Make a large random file
            dd if=/dev/urandom iflag=count_bytes count=500M bs=1M of=500M.dat
            # Transfer large data over HTTPS
            cat 500M.dat | curl -kT - https://localhost:8443/mypath2 &
            diff <(cat 500M.dat) <(curl -k https://localhost:8443/mypath2)
            rm 500M.dat

  docker_test:
    machine: true
    steps:
      - checkout
      # Check whether "docker build" is successful or not
      - run: docker build -t piping-server-rust .
      - run:
          name: Operational test with Docker image
          command: |
            set -eux
            # Run a server
            docker run -d -p 8080:80 --name=piping piping-server-rust --http-port=80
            # Wait for server running
            sleep 1
            # Create a file to send
            echo 'hello, world' > /tmp/hello.txt
            # Send and wait for a receiver
            curl -T /tmp/hello.txt localhost:8080/mypath &
            # Get data as a file
            curl localhost:8080/mypath > /tmp/download.txt
            # Print downloaded file
            cat  /tmp/download.txt
            # Test the equality
            diff /tmp/hello.txt /tmp/download.txt
            # Print server log
            docker logs piping
            # Delete container
            docker rm -f piping

workflows:
  version: 2
  tests:
    jobs:
      - build_and_operational_test
      - docker_test
